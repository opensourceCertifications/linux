---
# checks/verify_restored.yml

# 0) Ensure deps + deploy the checker
- name: Ensure minimal tools are present
  ansible.builtin.package:
    name:
      - dracut # lsinitrd for initramfs validation
      - grub2-tools-minimal # grub2-editenv
      - file # file(1) type detection
    state: present

- name: Install bootcheck script
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/library/boot_checker.sh"
    dest: /usr/local/bin/bootcheck
    mode: "0755"

# 1) Targets = ONLY corruptedBootFiles
- name: Set targets from corruptedBootFiles
  ansible.builtin.set_fact:
    boot_targets: "{{ corruptedBootFiles | default([]) }}"

- name: Init result buckets
  ansible.builtin.set_fact:
    restored_files: []
    corrupted_files: []

- name: Nothing to check?
  ansible.builtin.debug:
    msg: "No corrupted boot files listed; skipping verify_restored."
  when: boot_targets | length == 0

# 2) Run checker once per path (loop lives on the task, not on a block)
- name: Run bootcheck for each path
  ansible.builtin.command:
    argv: ["/usr/local/bin/bootcheck", "{{ item }}"]
  register: checks
  changed_when: false
  failed_when: false # don't fail the play; we bucket instead
  loop: "{{ boot_targets }}"
  loop_control:
    label: "{{ item }}"

# 3) Bucket results
- name: Bucket each result
  ansible.builtin.set_fact:
    restored_files: >-
      {{ restored_files + [ item.item ]
         if (item.rc | default(1)) == 0 and (item.stdout | trim) == 'CLEAN'
         else restored_files }}
    corrupted_files: >-
      {{ corrupted_files + [ item.item ]
         if (item.rc | default(1)) != 0 or (item.stdout | trim) == 'CORRUPTED'
         else corrupted_files }}
  loop: "{{ checks.results | default([]) }}"
  loop_control:
    label: "{{ item.item | default('') }}"

# 4) Append to /tmp/results.yml via your helper
- name: Append restored_files
  ansible.builtin.include_tasks: "{{ playbook_dir }}/library/append_to_results.yml"
  vars:
    result_key: "restored_files"
    new_items: "{{ restored_files }}"
  when: restored_files | length > 0

- name: Append corrupted_files
  ansible.builtin.include_tasks: "{{ playbook_dir }}/library/append_to_results.yml"
  vars:
    result_key: "corrupted_files"
    new_items: "{{ corrupted_files }}"
  when: corrupted_files | length > 0
