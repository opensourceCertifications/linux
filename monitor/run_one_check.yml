---
- name: Debug which check is running
  ansible.builtin.debug:
    msg: "Running check file: {{ cf }}"

- name: Derive check_id and dirs
  ansible.builtin.set_fact:
    check_id: "{{ cf | basename | regex_replace('\\.yml$', '') }}"
    remote_artifact_dir: "{{ remote_artifact_root }}/{{ cf | basename | regex_replace('\\.yml$', '') }}"
    local_artifact_dir:  "{{ local_artifact_root  }}/{{ cf | basename | regex_replace('\\.yml$', '') }}"

- name: Ensure remote artifact dir exists (on testenv)
  ansible.builtin.file:
    path: "{{ remote_artifact_dir }}"
    state: directory
    mode: "0755"

# IMPORTANT: pass ALIASES; do NOT pass check_id or remote_artifact_dir by the same name
- name: Run check {{ cf | basename }}
  ansible.builtin.include_tasks: "{{ cf }}"
  vars:
    _cid: "{{ check_id }}"
    _rad: "{{ remote_artifact_dir }}"

- name: Fetch artifacts (if any)
  ansible.builtin.fetch:
    src: "{{ remote_artifact_dir }}/"
    dest: "{{ local_artifact_dir }}/"
    flat: false
  ignore_errors: true
  failed_when: false

# Build a single result object on the TEST host (no delegation)
- name: Prepare result object from this check
  ansible.builtin.set_fact:
    _result_to_add: >-
      {{
        (check_result
          | default({'id': check_id, 'status': 'unknown', 'summary': 'no check_result set', 'data': {}}))
        | combine(
            {'artifacts': (local_artifact_dir | regex_replace('^' + playbook_dir + '/', ''))},
            recursive=True
          )
      }}

# Append that object on the MONITOR (delegated)
- name: Accumulate result (on monitor)
  ansible.builtin.set_fact:
    report_items: "{{ (report_items | default([])) + [ _result_to_add ] }}"
  delegate_to: localhost
  delegate_facts: true

